<?xml version="1.0"?>
<!--
 Licensed to the Hipparchus project under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The Hipparchus project licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!--
This file is used by the maven-changes-plugin to generate the release notes.
Useful ways of finding items to add to this file are:

1.  Add items when you fix a bug or add a feature (this makes the
release process easy :-).

2.  Do a JIRA search for tickets closed since the previous release.

3.  Use the report generated by the maven-changelog-plugin to see all
SVN commits.

To generate the file RELEASE-NOTES.txt from this file:

mvn changes:announcement-generate -Prelease-notes [-Dchanges.version]

The <action> type attribute can be add,update,fix,remove.
-->

<!-- NOTE:
The description attribute entries below are specially formatted 
so as to improve the layout of the generated text release notes.

The parsing process removes all line feeds, replacing them with a single space.
The Velocity template in src/changes/release-notes.vm has been enhanced to replace pairs of adjacent spaces
with a new-line in the release notes. (These spaces are ignored when displaying HTML).
If the output is not quite correct, check for invisible trailing spaces!
-->

<document>
  <properties>
    <title>Hipparchus Release Notes</title>
  </properties>
  <body>
    <release version="3.0" date="TBD" description="This is a major release.">
      <action dev="vincent" type="add" issue="issues/244">
        Added field version of Blendable interface method (implemented in FieldMatrix and FieldVector3D)
        Added field version of smoothstep function in SmoothStepFactory
      </action>
      <action dev="luc" type="update" issue="issues/243">
        Improve management of Cardan/Euler rotations close to singularity.
      </action>
      <action dev="luc" type="add" du-to="Lucas Girodet">
        Added torque-free motion model for non-symmetrical rigid body in ODE tests,
        with analytical theoretical reference solution.
      </action>
      <action dev="luc" type="update" issue="issues/223">
        Separated {Field}ODEEventDetector and {Field}ODEEventHandler.
      </action>
      <action dev="luc" type="update" issue="issues/220">
        Added reset state and stop integration capability at end of step for ODE integrators.
      </action>
      <action dev="luc" type="fix" issue="issues/228">
        Fixed FastMath.expm1(x) for huge values of x.
      </action>
      <action dev="luc" type="update" issue="issues/227">
        Renamed Decimal64{Field} into Binary64{Field}.
      </action>
      <action dev="luc" type="add" due-to="Paul King" issue="issues/221">
        Added Principal Component Analysis.
      </action>
      <action dev="vincent" type="add" issue="issues/212">
        Added Blendable interface and its implementation in RealMatrix and Vector interfaces.
        Changed Vector interface parameters.
        Added SmoothStepFactory which allow for quick creation of common and generic smoothstep function.
      </action>
    </release>
    <release version="2.3" date="2022-10-05" description="This is a maintenance release.">
      <action dev="luc" type="fix" issue="issues/208">
        Fixed wrong negation of point on the 2-sphere.
      </action>
      <action dev="luc" type="fix" issue="issues/207">
        Allow configuration of RandomPercentile in StreamingStatistics.
      </action>
      <action dev="bryan" type="add" issue="issues/205">
        Added new signature for SequentialGaussNewtonOptimizer#withAPrioriData allowing
        to define the Cholesky decomposition thresholds.
      </action>
      <action dev="luc" type="add" issue="issues/204">
        Changed HessenbergTransformer visibility to public.
      </action>
      <action dev="luc" type="add" issue="issues/204">
        Changed SchurTransformer visibility to public.
      </action>
    </release>
    <release version="2.2" date="2022-08-10" description="This is a maintenance release. The main
    changes are: addition of Unscented Kalman Filter for non linear estimations and
    addition of Taylor map inversion.">
      <action dev="luc" type="add" issue="issues/190">
        Added {Field}TaylorMap, supporting evaluation, composition and inversion.
      </action>
      <action dev="luc" type="add" issue="issues/200">
        Added FieldMatrixDecomposer.
      </action>
      <action dev="luc" type="add" issue="issues/191">
        Added rebase to {Field}DerivativeStructure, which enables changing
        the base variables a {Field}DerivativeStructure depends on.
      </action>
      <action dev="bryan" type="add" due-to="Gaetan Pierre" issue="issues/199">
        Added Unscented Kalman Filter for non linear estimations.
      </action>
      <action dev="luc" type="add" issue="issues/198">
        Added CombinatoricsUtils.permutations.
      </action>
      <action dev="luc" type="add">
        Added computation of Bell numbers.
      </action>
      <action dev="luc" type="add" due-to="Axel Kramer" issue="issues/197">
        Added RosenNumberPartitionIterator.
      </action>
      <action dev="luc" type="add" issue="issues/197">
        Added CombinatoricsUtils.partitions.
      </action>
      <action dev="luc" type="add" issue="issues/195">
        Added FieldMultivariateFunction, CalculusFieldMultivariateFunction,
        FieldMultivariateVectorFunction, CalculusFieldMultivariateVectorFunction,
        FieldMultivariateMatrixFunction and CalculusFieldMultivariateMatrixFunction
      </action>
      <action dev="luc" type="fix" issue="issues/194">
        Added a getPrimary method to FieldExpandableODE.
      </action>
      <action dev="luc" type="add" due-to="Romain Serra" issue="issues/192">
        Added integration/differentiation of {Field}DerivativeStructure.
      </action>
    </release>
    <release version="2.1" date="2022-04-24" description="This is a maintenance release. The main
      changes are: addition of 3D version of complex function plotter, addition of
      ConvergenceCheckerOrMultiplexer and ConvergenceCheckerAndMultiplexer, addition of inverse
      Jacobi elliptic functions, optional modified weights to Akima interpolation, modified
      Gram-Schmidt basis orthonormalization process, generation of convergents streams in continued
      fractions, addition of equalsIee754 to points in all topologies to handle NaN coordinates.
      Various bugs were fixed.">
      <action dev="luc" type="fix" issue="issues/189">
        Fixed some wrong branch cuts in inverse Jacobi elliptic functions in the complex case.
      </action>
      <action dev="luc" type="update" >
        Added a 3D version of complex plots.
      </action>
      <action dev="luc" type="add" issue="issues/172">
        Added optional modified weights to avoid overshoots in Akima interpolation
        near constant slopes sub-samples.
      </action>
      <action dev="luc" type="add" issue="issues/136">
        Added ConvergenceCheckerOrMultiplexer and ConvergenceCheckerAndMultiplexer.
      </action>
      <action dev="luc" type="fix" issue="issues/186">
        Avoid building an intermediate complex for computing double norm.
      </action>
      <action dev="luc" type="fix" issue="issues/175">
        Fixed overflows for incrementors that are allowed to reach Integer.MAX_VALUE.
      </action>
      <action dev="luc" type="fix" issue="issues/188">
        Added inverse Jacobi elliptic functions, for both double and field values.
      </action>
      <action dev="luc" type="fix" issue="issues/187">
        Fixed wrong set operation with ArcsSet when two BSP trees share
        the same angle as a cut hyperplane.
      </action>
      <action dev="luc" type="fix" issue="issues/184">
        Fixed non-bracketing issue when RESET_STATE slightly moves an event at the start
        of a step and another regular event happens in the first half of the same step
      </action>
      <action dev="luc" type="add">
        Added equalsIee754 to S1Point, S2Point, Vector1D, Vector2D and Vector3D
        to have an equality method consistent with IEEE754 concerning NaN coordinates,
        in addition to the regular equals method compliant with Java language design
        choices, including Double.equals (which is different from the double == operator).
      </action>
      <action dev="luc" type="fix" issue="issues/183">
        Avoid too many calls to function in BracketingNthOrderBrentSolver when using
        AllowedSolution.ANY_SIDE.
      </action>
      <action dev="luc" type="fix" issue="issues/178">
        Added Modified Gram-Schmidt basis orthonormalization process in MatrixUtils
        for double-based and CalculusFieldElement-based list of vectors.
      </action>
      <action dev="luc" type="fix" issue="issues/177">
        Fixed issue in Laguerre solver related to different representations of signed zeros.
      </action>
      <action dev="luc" type="add" issue="issues/176">
        Allow generation of continued fractions convergents as streams of BigFraction/Fraction
        to allow user to apply their own convergence criterion to select one convergent.
      </action>
      <action dev="luc" type="add" issue="issues/173">
        Fixed inconsistency of eigenvalues and eigenvectors between OrderedComplexEigenDecomposition
        and base class ComplexEigenDecomposition.
      </action>
    </release>
    <release version="2.0" date="2021-08-07" description="This is a major release. The main changes
    are the addition of a sequential Gauss-Newton optimizer, improved relative scheduling of step handlers
    and events handlers in ODE, addition of a finish callback in step handlers, replacement of
    RealFieldElement by CalculusFieldElement interface, many improvements in Complex to fully
    implement CalculusFieldElement with correct branch cuts so complex numbers can be used in many
    Hipparchus algorithms, addition of FieldComplex, addition of complex and field complex univariate integrals,
    addition of field univariate integrators, and faster simultaneous computation of sinhcos.
    Experimental implementation of elliptic functions and integrals for real, complex and general fields
    have been added. Beware the elliptic integrals for complex and field complex numbers in the incomplete case
    are considered experimental for now, they have known issues. Methods deprecated during the 1.X series have
    been removed. Numerous bugs were also fixed.">
      <action dev="luc" type="add" issue="issues/153">
        Added field versions of univariate integrators.
      </action>
      <action dev="luc" type="add" >
        Added numerical evaluation of complex elliptic integrals.
      </action>
      <action dev="luc" type="add" issue="issues/149">
        Added complex and field complex univariate integrals (including contour integrals).
      </action>
      <action dev="luc" type="add" issue="issues/147">
        Allow retrieving event handler configuration from ODE integrators.
      </action>
      <action dev="luc" type="add" issue="issues/146">
        Added a separate finish method in ODE step handlers to be called after last step.
      </action>
      <action dev="luc" type="fix" issue="issues/145">
        Fixed out-of-order scheduling of calls to step handlers and event handlers.
      </action>
      <action dev="luc" type="add" issue="issues/143">
        Added ArrayFieldVector.toString().
      </action>
      <action dev="luc" type="fix" due-to="Axel Kramer" issue="issues/144">
        Fixed array index error in field LU decomposition.
      </action>
      <action dev="luc" type="add" due-to="Julie Bayard" >
        Added sequential Gauss-Newton optimizer.
      </action>
      <action dev="luc" type="add" issue="issues/135">
        Added getRowDimension and getColumnDimension
        to DecompositionSolver and FieldDecompositionSolver.
      </action>
      <action dev="luc" type="fix" issue="issues/142">
        Fixed ulp() implementation for Dfp.
      </action>
      <action dev="luc" type="add" issue="issues/141">
        Added a way to have a more accurate value of π for fields implementations that require it.
      </action>
      <action dev="luc" type="fix" issue="issues/140">
        Clarified arguments in the one-argument version of the two-arguments atan2
        function in CalculusFieldElement.
      </action>
      <action dev="luc" type="fix" issue="issues/138">
        Renamed signum into sign in field classes, and improved implementation for complex numbers.
      </action>
      <action dev="bryan" type="fix" issue="issues/131">
        Fixed consistent implementations between {Field}LUDecomposition classes.
      </action>
      <action dev="luc" type="add">
        Added Carlson elliptic integrals (R_F, R_J, R_G, R_D, and R_C)
        both for real, CalculusFieldElement, Complex, and FieldComplex.
      </action>
      <action dev="luc" type="fix" issue="issues/129">
        Fixed branch cut on imaginary axis for complex atan.
      </action>
      <action dev="luc" type="add" issue="issues/124">
        Changed return types for field elements methods (including Complex):
        norm() → double, abs() → field element.
      </action>
      <action dev="luc" type="add">
        Added the four Jacobi theta functions θ₁(z|τ), θ₂(z|τ), θ₃(z|τ), and θ₄(z|τ),
        both for complex and field complex.
      </action>
      <action dev="luc" type="add" issue="issues/126">
        Added field-based complex numbers.
      </action>
      <action dev="luc" type="add">
        Added Legendre elliptic integrals (K, K', E, D, F, Π), both complete and incomplete,
        both for real, CalculusFieldElement, Complex, and FieldComplex.
      </action>
      <action dev="luc" type="add" issue="issues/119">
        Added the twelve Jacobi elliptic functions sn, cn, dn,
        cs, ds, ns, dc, nc, sc, nd, sd, and cd, both for primitive double
        and fields.
      </action>
      <action dev="luc" type="fix" issue="issues/123">
        Added field implementations of ulp function.
      </action>
      <action dev="luc" type="fix" issue="issues/122">
        Added a way to compute both sinh and cosh at once faster than performing two calls.
        This also speeds up all derivatives implementations as well as complex computations.
      </action>
      <action dev="luc" type="fix" issue="issues/121">
        Removed methods and constants deprecated during the 1.x series.
      </action>
      <action dev="luc" type="fix" issue="issues/67">
        Replaced RealFieldElement by CalculusFieldElement interface and have Complex
        implement it so it can be used in many Hipparchus algorithms (like ODE).
        Also replaced RealField{Univariate|Bivariate|Vector|Matrix}Function by
        CalculusField{Univariate|Bivariate|Vector|Matrix}Function.
      </action>
      <action dev="luc" type="fix" issue="issues/120">
        Added event filtering for field ODE.
      </action>
      <action dev="luc" type="fix" issue="issues/118" sdue-to="afossa">
        Use primitive double for initial step and error factors in Field adaptive step size integrators.
      </action>
      <action dev="luc" type="add">
        Added the Ryū algorithm to generate very fast the shortest decimal
        representation of a floating point number that maintains round-trip safety.
      </action>
      <action dev="andrewsgoetz" type="fix" issue="issues/112" due-to="andrewsgoetz">
        Fix interpolation of a pair of ODE states whose times are the same. Such a pair can
        appear when a RESET_STATE or RESET_DERIVATIVES event occurs at the integration
        stop time.
      </action>
      <action dev="luc" type="fix" issue="issues/111">
        Allow selecting customized threshold for tests in OrderedComplexEigenDecomposition.
      </action>
      <action dev="luc" type="fix" issue="issues/110">
        Added zero checker predicate for some linear algebra algorithms.
      </action>
      <action dev="luc" type="fix" issue="issues/109">
        Fixed exception in OrderedComplexEigenDecomposition when eigenvalues are equal.
      </action>
    </release>
    <release version="1.8" date="2020-12-05" description="This is a maintenance release.
    It fixes a few bugs, mainly a serious one for complex eigendecomposition when
    several eigenvalues are equal. It also add sum and angle differences in SinCos and FieldSinCos.">
      <action dev="luc" type="fix" issue="issues/106">
        Added sum and difference of angles in SinCos and FieldSinCos.
      </action>
      <action dev="luc" type="fix" issue="issues/105">
        Removed spurious reduction of BigFraction in equality test.
      </action>
      <action dev="luc" type="add" issue="issues/104">
        Fixed LU-decomposition issue with signed zero complex numbers on diagonal.
      </action>
      <action dev="luc" type="add" issue="issues/99">
        Fixed complex eigendecomposition when several eigenvalues are equals.
      </action>
    </release>
    <release version="1.7"  date="2020-06-23" description="This is a maintenance release.
    It fixes several bugs, including a nasty one in ODE events handling, improves a lot
    the Complex class so it implements the new CalculusFieldElement interface, and adds
    several new differentiation classes to handle simpler cases (univariate derivatives
    at orders 1 and 2 and gradients) with less overhead than the existing DerivativeStructure.">
      <action dev="bryan" type="add" issue="issues/97">
      Added ExtendedUnivariateDifferentiableVectorFunction interface
      for differentiable vectorial function.
      </action>
      <action dev="luc" type="add">
        Added intermediate interface {Field}Derivative.
        The interface is implemented by both {Field}DerivativeStructure, {Field}Gradient,
        {Field}UnivariateDerivative1and {Field}UnivariateDerivative2
      </action>
      <action dev="bryan" type="add" issue="issues/95">
        Added new mathematical methods for FieldGradient,
        FieldUnivariateDerivative1 and FieldUnivariateDerivative2.
      </action>
      <action dev="luc" type="add" issue="issues/92">
        Added isMathematicalInteger to Complex.
      </action>
      <action dev="luc" type="add" >
        Added isMathematicalInteger to Precision for double and float numbers.
      </action>
      <action dev="evan" type="fix" issue="issues/94" due-to="Mikael">
        Fix infinite loop in event handling when a RESET_STATE or RESET_DERIVATIVES event
        causes two other event detectors to trigger simultaneously and discontinuously at
        the same time.
      </action>
      <action dev="luc" type="add" issue="issues/93">
        Added UnivariateDerivative1, UnivariateDerivative2 and Gradient
        for computing derivatives in simple cases with less overhead than
        DerivativeStructure.
      </action>
       <action dev="luc" type="add" issue="issues/81">
        Added map and mapToSelf to RealMatrix.
      </action>
      <action dev="luc" type="fix" issue="issues/71">
        Don't ignore exceptions, use try with resources.
      </action>
      <action dev="luc" type="fix" issue="issues/91">
        Fixed accuracy of linear combination for Dfp.
      </action>
      <action dev="luc" type="add" >
        Added Dfp conversion to either larger or smaller number of digits.
      </action>
      <action dev="luc" type="fix" issue="issues/88">
        Fixed handling of special cases in Dfp.atan2(y, x).
      </action>
      <action dev="luc" type="fix" issue="issues/87">
        Prevent overflow of Dfp.hypot.
      </action>
      <action dev="luc" type="fix" issue="issues/86">
        Fixed Dfp.floor and Dfp.ceil for numbers close to zero.
      </action>
      <action dev="luc" type="fix" issue="issues/82">
        Fixed Decimal64.rootN for negative arguments and even roots.
      </action>
      <action dev="luc" type="fix" issue="issues/77">
        Provide both L_1 and L_infinity norms for matrices.
      </action>
       <action dev="luc" type="fix" issue="issues/76">
        Fixed MathArrays.linearCombination when signed zeros are involved.
      </action>
      <action dev="evan" type="add" issue="issues/78">
        Add Line.fromDirection(...).
      </action>
      <action dev="bryan" type="update" issue="issues/72">
        Changed RotationOrder from final class to enum.
      </action>
      <action dev="luc" type="fix" issue="issues/74">
        Fixed Complex.pow(Complex p) and Complex.pow(double p) for special cases (real arguments,
        integer power, 0).
      </action>
      <action dev="luc" type="add" >
        Added Complex.pow(int n) with integer power computed more accurately by successive squarings
        rather than complex logarithm and exponential.
      </action>
      <action dev="luc" type="fix" issue="issues/63">
        Added signum to Fraction and BigFraction.
      </action>
      <action dev="luc" type="fix" >
        Prevent random failure of micro-sphere test case.
      </action>
    </release>
    <release version="1.6"  date="2019-11-01" description="This is a maintenance release. The main
    changes are the addition of a field version of Vector2D, addition of an Optimum.of() factory
    method and a visibility change of the AbstractEvaluation constructor.">
      <action dev="ward" type="add">
        Add Optimum.of(...).
      </action>
      <action dev="ward" type="add">
        Make AbstractEvaluation constructor public, fix javadoc.
      </action>
     <action dev="luc" type="fix" issue="issues/62" >
       Fixed missing safety check in multi-step integrators.
       Github: fixes #62.
     </action>
      <action dev="luc" type="add">
        Added field version of Vector2D.
      </action>
      <action dev="luc" type="fix" issue="issues/61">
        Prevent stack overflow error when attempting integration with too large number of points.
      </action>
      <action dev="ward" type="fix" issue="issues/56">
        Show full precision in exception message when root bracketing fails.
      </action>
      <action dev="ward" type="add" issue="issues/56">
        When exception message formatting fails still show a helpful message and stack
        trace.
      </action>
    </release>
    <release version="1.5" date="2019-05-06" description="This is a maintenance release. The main
    changes since last version are the introduction of field versions of bilinear interpolation,
    univariate interpolators, polynomials and polynomial spline functions, and the introduction of
    reset events in ODE.">
      <action dev="luc" type="fix" due-to="Hao Peng">
        Nullify corrected state after predict in abstract Kalman filter. Note that this affects
        only custom extensions of AbstractKalmanFilter because the implementations provided
        by Hipparchus (LinearKalmanFilter and ExtendedKalmanFilter) always call correction
        step after having called prediction step, so the nullified corrected state is reset
        properly at the end. This was initially reported as https://gitlab.orekit.org/orekit/orekit/issues/540.
      </action>
      <action dev="luc" type="add" issue="issues/55" >
        Added FieldBivariateFunction and make both BilinearInterpolatingFunction
        and PiecewiseBicubicSplineInterpolatingFunction implement it.
        Github: fixes #55.
      </action>
      <action dev="luc" type="add">
        Added FieldUnivariateInterpolator and make both LinearInterpolator,
        AkimaSplineInterpolator and SplineInterpolator implement it.
      </action>
      <action dev="luc" type="add">
        Added FieldPolynomialFunction and FieldPolynomialSplineFunction.
      </action>
     <action dev="luc" type="fix" issue="issues/54" >
       Avoid too many multi-step integrator restarts after event resetting derivatives.
       Github: fixes #54.
     </action>
     <action dev="evan" type="add">
        Add Action.RESET_EVENTS to ask the integrator to recheck all event detectors
        without recomputing the step. Use when the g function of one event detector
        depends on events occurring in another event detector.
      </action>
      <action dev="luc" type="add" issue="issues/53" >
        Fixed documentation for interpolation algorithms.
        Github: fixes #53.
      </action>
      <action dev="luc" type="fix" due-to="Matt Juntunen">
        Fixed lines/polyhedrons intersection occurring on facets boundaries.
        This was ported from Apache Commons Geometry issue 38.
      </action>
    </release>
    <release version="1.4" date="2018-11-17" description="This is a maintenance release. The main
    changes since last version are the introduction of bilinear interpolation for 2D grids, field
    versions of sinCos and a way to build three-dimensional field arrays, accessors for state
    transition matrix, Jacobian matrix H, innovation covariance matrix and Kalman gain in Kalman
    filters, support for complex ordinary differential equations (both primary and secondary
    equations), and various fixes in partitioning.">
      <action dev="luc" type="add" issue="issues/48" >
        Added bilinear interpolation for 2D grids.
        Github: fixes #48.
      </action>
      <action dev="luc" type="add" issue="issues/47" >
        Added field version of sinCos.
        Github: fixes #47.
      </action>
      <action dev="luc" type="fix" issue="issues/45">
        Fixed 2D outline extraction from 3D polyhedrons sets with holes.
        GitHub: fixes #45.
      </action>
      <action dev="luc" type="add" issue="issues/39" >
        Added support for complex ordinary differential equations (both primary and secondary equations).
        Github: fixes #39.
      </action>
      <action dev="luc" type="fix" issue="issues/44" >
        Fixed wrong construction of an Illinois solver that really built a Pegasus solver.
        Github: fixes #44.
      </action>
      <action dev="luc" type="fix" issue="issues/4" >
        Renamed scale parameter to location parameter in the log-normal distribution,
        to avoid confusion.
        Github: fixes #4.
      </action>
      <action dev="luc" type="add" issue="issues/43">
        Added accessors for state transition matrix, Jacobian matrix H, innovation covariance matrix
        and Kalman gain in Kalman filters.
        GitHub: fixes #43.
      </action>
      <action dev="luc" type="fix" issue="issues/42">
        Use topological information from BSP tree to connect more reliably edges and
        vertices when building the boundary loops of SphericalPolygonsSet.
        GitHub: fixes #42.
      </action>
      <action dev="luc" type="fix" issue="issues/42">
        Forbid use of unrealistic tolerances (below ulp(2π)) in spherical geometry.
        GitHub: fixes #42.
      </action>
      <action dev="luc" type="fix" issue="issues/41">
        Fixed a corner case in BSPTree split.
        GitHub: fixes #41.
      </action>
      <action dev="luc" type="fix" issue="issues/40" >
        Bisection solvers failed to raise an exception when the search
        interval did not bracket a root.
        GitHub: fixes #40.
      </action>
      <action dev="luc" type="add" >
        Added a way to build three-dimensional field arrays.
      </action>
    </release>
    <release version="1.3" date="2018-05-08" description="This is a maintenance release. The main
    changes since last version are the introduction of complex eigen decomposition, introduction of
    a solver for continuous time algebraic Riccati equation, a new Kalman module featuring both a
    filter for linear processes and a filter for non-linear processes, capability for secondary
    equations to update the derivatives of the primary equation in ODE, and introduction of a
    matrix decomposer to configure decomposition threshold independently of the matrix.">
      <action dev="luc" type="add" issue="issues/36" >
        Added in FastMath the methods Java 9 added in StrictMath.
        This ensures FastMath is always a drop-in replacement for Math/StrictMath.
        Github: fixes #36.
      </action>
      <action dev="luc" type="fix" issue="issues/35" >
        Added FieldUnivariateVectorFunction and FieldUnivariateMatrixFunction interfaces,
        as well as RealFieldUnivariateVectorFunction and RealFieldUnivariateMatrixFunction 
        Github: fixes #35.
      </action>
      <action dev="luc" type="fix" issue="issues/34" >
        Added FieldUnivariateFunction interface and have polynomials implement it.
        Github: fixes #34.
      </action>
      <action dev="luc" type="add">
        Added new utility methods to create real and field vectors from dimension.
      </action>
      <action dev="luc" type="add">
        Allow FastMath to operate on RealFieldElements.
        This simplifies a lot "fieldification" of algorithms
        previously implemented with primitive double numbers.
      </action>
      <action dev="luc" type="add">
        Added a transposeMultiply method to compute A^T.B
        without creating the intermediate transposed matrix.
      </action>
      <action dev="luc" type="add">
        Added a multiplyTransposed method to compute A.B^T
        without creating the intermediate transposed matrix.
      </action>
      <action dev="luc" type="add" issue="issues/32" >
        Added linear and extended Kalman filters, with support for outliers rejection.
      </action>
      <action dev="luc" type="add" due-to="Evan Ward">
        Added MatrixDecomposer interface that encapsulates algorithms tolerances.
      </action>
      <action dev="luc" type="add" >
        Added a way to compute both sin and cos at once faster than performing two calls.
        This also speeds up DerivativeStructure.sin and DerivativeStructure.cos.
      </action>
       <action dev="luc" type="add" issue="issues/31" >
        Allow secondary equations to update derivatives of primary equation in ODE.
        GitHub: fixes #31.
      </action>
      <action dev="luc" type="fix" issue="issues/30" >
        Fixed a problem with eigen decomposition of matrices with large coefficients.
        Github: fixes #30.
      </action>
      <action dev="luc" type="add" issue="issues/29" due-to="Alessandro Romero">
        Added a solver for Continuous time Algebraic Riccati Equation.
      </action>
      <action dev="luc" type="add" due-to="Alessandro Romero">
        Added complex eigen decomposition.
      </action>
      <action dev="psteitz" type="fix" issue="issues/38">
        Corrected MannWhitneyTest to report the U statistic used in the test and improved
        accuracy of the reported p-values by 1) adding an implementation
        of exact computation for small sample sizes 2) applying continuity correction
        to the normal approximation when this is used 3) adjusting variance for the presence
        of ties in the data. The problem with the U statistic was reported against Apache
        Commons Math as MATH-1453.
      </action>
      <action dev="psteitz" type="fix" issue="issues/37">
        Corrected WilcoxonSignedRankTest to discard tied pairs and to correctly perform
        continuity correction when estimating p-values using the normal approximation.
        This was reported against Apache Commons Math as MATH-1233.
      </action>
    </release>
    <release version="1.2" date="2017-10-25" description="This is a maintenance release.">
      <action dev="luc" type="add" >
        Added new RealFieldElement implementations computing a tuple. This allow to perform the
        same computation on several values at once.  The getReal() value correspond to the
        first component of the tuple.
      </action>
      <action dev="luc" type="add">
        Added a method to compute the orientation of a triplet of points in 2D.
      </action>
      <action dev="psteitz" type="fix" issue="issues/25">
        Fixed an error in EmpiricalDistribution causing cumulative probabilities to be returned
        as NaN when some data bins are empty.  This was reported against Apache Commons Math as
        MATH-1431.
        Github: fixes #25.
      </action>
      <action dev="luc" type="add" issue="issues/24">
        Added bracketing helper methods in UnivariateSolverUtils for RealFieldUnivariateFunction.
        Github: fixes #24.
      </action>
      <action dev="luc" type="add">
        Added a getBRep method to PolyhedronsSet to extract a Boundary REPresentation in
        regular cases (unbounded PolyhedronsSet or PolyhedronsSet with holes in their
        boundary are not supported).
      </action>
      <action dev="luc" type="fix" issue="issues/23">
        Fixed NullPointerException when computing size of unbounded polygons sets.
      </action>
      <action dev="luc" type="update" issue="issues/22" due-to="Christoph Dibak">
        Improved performance of getRow and setRow for Array2DRowRealMatrix and Array2DRowFieldMatrix.
        Github: fixes #22.
      </action>
      <action dev="luc" type="fix" issue="issues/21">
        Fixed polygons creation from lists of vertices (both in Euclidean and spherical geometry)
        when separate edges share the same hyperplane (line or circle) but with different
        orientations.
      </action>
    </release>
    <release version="1.1" date="2017-03-16" description="This is a maintenance release.">
     <action dev="psteitz" type="add" issue="issues/19" >
       Core: Added support for sampling from enumerated distributions in RandomDataGenerator.
       GitHub: fixes issue #19.
     </action>
     <action dev="psteitz" type="add" issue="issues/18" >
       Core: Added support for exact integration in PolynomialFunction.
       GitHub: fixes issue #18.
     </action>
      <action dev="luc" type="update">
        Added a factory to simplify building DerivativeStructure instances.
      </action>
     <action dev="luc" type="add">
       Core: Added proper implementations of equals and hashCode to Fields so they
       can be used as keys in maps.
     </action>
     <action dev="luc" type="add">
       Core: Added a derivatives method in Hermite interpolator, similar to the one
       from FieldHermiteInterpolator.
     </action>
     <action dev="luc" type="add">
       Core: Added field-based derivative structures.
     </action>
     <action dev="luc" type="fix" issue="issues/17" due-to="Andrea Antolino">
       Core: Added field-based QR decomposition.
       GitHub: fixes issue #17.
     </action>
     <action dev="ebourg" type="update" issue="issues/12"  due-to="Christoph Dibak">
       Core: Performance improvement for Array2DRowRealMatrix.getSubMatrix() (and also
       Array2DRowFieldMatrix.getSubMatrix()).
       GitHub: fixes issue #12.
     </action>
     <action dev="psteitz" type="fix">
       Core: Improved parameter validation for probabilities provided to enumerated distribution
       constructors.
     </action>
     <action dev="psteitz" type="update">
       Core: Added methods to expose the probability mass function to EnumeratedRealDistribution
       and EnumeratedIntegerDistribution.
     </action>
     <action dev="psteitz" type="fix" issue="issues/13" >
       Stat: Fixed overly-aggressive sufficient data check in OLS/GLS regression classes.
       When there is no intercept in the model, the number of observations can equal
       the number of regressors.  GitHub: fixes #13.
     </action>
     <action dev="psteitz" type="fix">
       Stat: Fixed bug in 2-sided binomial test leading to inflated p-values in some
       cases.  This was reported against Commons Math as MATH-1381.
     </action>
     <action dev="psteitz" type="add">
       Stat: Add implementation of RANDOM algorithm for streaming percentile computation.
     </action>
     <action dev="tn" type="add">
       Stat: Add default "toString()" implementation to "AbstractStorelessUnivariateStatistic".
     </action>
     <action dev="tn" type="add">
       Stat: "StorelessUnivariateStatistic", "DescriptiveStatistics" and "StreamingStatistics"
       now extend from "DoubleConsumer", allowing to easily use them within streams.
     </action>
     <action dev="luc" type="fix" issue="issues/7" >
       Ode: Fixed Field ODE integrators handling of secondary equations.
       GitHub: fixes #7.
     </action>
     <action dev="luc" type="fix" issue="issues/20" >
       Geometry: Fixed numerical noise issues in Welzl smallest enclosing ball computation.
       Thanks to jerdmanGH for reporting the issue.
       GitHub: fixes #20.
     </action>
     <action dev="luc" type="add">
       Geometry: Added field based 3D lines.
     </action>
     <action dev="luc" type="add">
       Geometry: Added utility methods for field-based rotations and 3D vectors.
     </action>
    </release>
    <release version="1.0" date="2016-06-23" description="This is the first release of the library">
      <action dev="luc" type="add">
        Creation of a migration module and an associated script
        to help switching from Apache Commons Math to Hipparchus.
      </action>
      <action dev="luc" type="update">
        Simplified exception hierarchy.
      </action>
      <action dev="tn" type="update">
        Modularized the library into several components
        (hipparchus-core, hipparchus-clustering, hipparchus-fft,
         hipparchus-fitting, hipparchus-genetics, hipparchus-geometry,
         hipparchus-geometry, hipparchus-ode, hipparchus-optim,
         hipparchus-samples, hipparchus-stat).
      </action>
      <action dev="psteitz" type="update">
        Forked from the Apache Commons Math library.
      </action>
    </release>
  </body>
</document>
