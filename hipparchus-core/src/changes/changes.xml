<?xml version="1.0"?>
<!--
 Licensed to the Hipparchus project under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The Hipparchus project licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!--
This file is used by the maven-changes-plugin to generate the release notes.
Useful ways of finding items to add to this file are:

1.  Add items when you fix a bug or add a feature (this makes the
release process easy :-).

2.  Do a JIRA search for tickets closed since the previous release.

3.  Use the report generated by the maven-changelog-plugin to see all
SVN commits.

To generate the file RELEASE-NOTES.txt from this file:

mvn changes:announcement-generate -Prelease-notes [-Dchanges.version]

The <action> type attribute can be add,update,fix,remove.
-->

<!-- NOTE:
The description attribute entries below are specially formatted 
so as to improve the layout of the generated text release notes.

The parsing process removes all line feeds, replacing them with a single space.
The Velocity template in src/changes/release-notes.vm has been enhanced to replace pairs of adjacent spaces
with a new-line in the release notes. (These spaces are ignored when displaying HTML).
If the output is not quite correct, check for invisible trailing spaces!
-->

<document>
  <properties>
    <title>Hipparchus Core Release Notes</title>
  </properties>
  <body>
    <release version="2.1" date="TBD" description="TBD">
      <action dev="luc" type="add" issue="issue/172">
        Added optional modified weights to avoid overshoots in Akima interpolation
        near constant slopes sub-samples.
      </action>
      <action dev="luc" type="fix" issue="issue/186">
        Avoid building an intermediate complex for computing double norm.
      </action>
      <action dev="luc" type="fix" issue="issue/175">
        Fixed overflows for incrementors that are allowed to reach Integer.MAX_VALUE.
      </action>
      <action dev="luc" type="fix" issue="issue/188">
        Added inverse Jacobi elliptic functions, for both double and field values.
      </action>
      <action dev="luc" type="fix" issue="issue/183">
        Avoid too many calls to function in BracketingNthOrderBrentSolver when using
        AllowedSolution.ANY_SIDE.
      </action>
      <action dev="luc" type="fix" issue="issue/178">
        Added Modified Gram-Schmidt basis orthonormalization process in MatrixUtils
        for double-based and CalculusFieldElement-based list of vectors.
      </action>
      <action dev="luc" type="fix" issue="issue/177">
        Fixed issue in Laguerre solver related to different representations of signed zeros.
      </action>
      <action dev="luc" type="add" issue="issue/176">
        Allow generation of continued fractions convergents as streams of BigFraction/Fraction
        to allow user to apply their own convergence criterion to select one convergent.
      </action>
      <action dev="luc" type="add" issue="issue/173">
        Fixed inconsistency of eigenvalues and eigenvectors between OrderedComplexEigenDecomposition
        and base class ComplexEigenDecomposition.
      </action>
    </release>
    <release version="2.0" date="2021-08-07" description="This is a major release. The main changes
    are replacement of RealFieldElement by CalculusFieldElement interface, many improvements in Complex
    to fully implement CalculusFieldElement with correct branch cuts so complex numbers can be used in
    many Hipparchus algorithms, addition of FieldComplex, addition of complex and field complex univariate
    integrals, addition of field univariate integrators, and faster simultaneous computation of sinhcos.
    Experimental implementation of elliptic functions and integrals for real, complex and general fields
    have been added. Beware the elliptic integrals for complex and field complex numbers in the incomplete
    case are considered experimental for now, they have known issues. Methods deprecated during the 1.X
    series have been removed. Numerous bugs were also fixed.">
      <action dev="luc" type="add" issue="issue/153">
        Added field versions of univariate integrators.
      </action>
      <action dev="luc" type="add" >
        Added numerical evaluation of complex elliptic integrals.
      </action>
      <action dev="luc" type="add" issue="issue/149">
        Added complex and field complex univariate integrals (including contour integrals).
      </action>
      <action dev="luc" type="add" issue="issue/143">
        Added ArrayFieldVector.toString().
      </action>
      <action dev="luc" type="fix" due-to="Axel Kramer" issue="issues/144">
        Fixed array index error in field LU decomposition.
      </action>
      <action dev="luc" type="add" issue="issues/135">
        Added getRowDimension and getColumnDimension
        to DecompositionSolver and FieldDecompositionSolver.
      </action>
      <action dev="luc" type="fix" issue="issues/142">
        Fixed ulp() implementation for Dfp.
      </action>
      <action dev="luc" type="add" issue="issues/141">
        Added a way to have a more accurate value of π for fields implementations that require it.
      </action>
      <action dev="luc" type="fix" issue="issues/140">
        Clarified arguments in the one-argument version of the two-arguments atan2
        function in CalculusFieldElement.
      </action>
      <action dev="luc" type="fix" issue="issues/138">
        Renamed signum into sign in field classes, and improved implementation for complex numbers.
      </action>
      <action dev="bryan" type="fix" issue="issues/131">
        Fixed consistent implementations between {Field}LUDecomposition classes.
      </action>
      <action dev="luc" type="add">
        Added Carlson elliptic integrals (R_F, R_J, R_G, R_D, and R_C)
        both for real, CalculusFieldElement, Complex, and FieldComplex.
      </action>
      <action dev="luc" type="fix" issue="issues/129">
        Fixed branch cut on imaginary axis for complex atan.
      </action>
      <action dev="luc" type="add" issue="issues/124">
        Changed return types for field elements methods (including Complex):
        norm() → double, abs() → field element.
      </action>
      <action dev="luc" type="add">
        Added the four Jacobi theta functions θ₁(z|τ), θ₂(z|τ), θ₃(z|τ), and θ₄(z|τ),
        both for complex and field complex.
      </action>
      <action dev="luc" type="add" issue="issues/126">
        Added field-based complex numbers.
      </action>
      <action dev="luc" type="add">
        Added Legendre elliptic integrals (K, K', E, D, F, Π), both complete and incomplete,
        both for real, CalculusFieldElement, Complex, and FieldComplex.
      </action>
      <action dev="luc" type="add" issue="issues/119">
        Added the twelve Jacobi elliptic functions sn, cn, dn,
        cs, ds, ns, dc, nc, sc, nd, sd, and cd, both for primitive double
        and fields.
      </action>
      <action dev="luc" type="fix" issue="issues/123">
        Added field implementations of ulp function.
      </action>
      <action dev="luc" type="fix" issue="issues/122">
        Added a way to compute both sinh and cosh at once faster than performing two calls.
        This also speeds up all derivatives implementations as well as complex computations.
      </action>
      <action dev="luc" type="fix" issue="issues/121">
        Removed methods and constants deprecated during the 1.x series.
      </action>
      <action dev="luc" type="fix" issue="issues/67">
        Replaced RealFieldElement by CalculusFieldElement interface and have Complex
        implement it so it can be used in many Hipparchus algorithms (like ODE).
        Also replaced RealField{Univariate|Bivariate|Vector|Matrix}Function by
        CalculusField{Univariate|Bivariate|Vector|Matrix}Function.
      </action>
      <action dev="luc" type="add" issue="issues/115">
        Added isInteger predicate for Fraction and BigFraction.
      </action>
      <action dev="luc" type="add">
        Added the Ryū algorithm to generate very fast the shortest decimal
        representation of a floating point number that maintains round-trip safety.
      </action>
      <action dev="andrewsgoetz" type="add" issue="issues/116">
        Added Møller's 2Sum algorithm to MathUtils.
      </action>
      <action dev="luc" type="fix" issue="issues/111">
        Allow selecting customized threshold for tests in OrderedComplexEigenDecomposition.
      </action>
      <action dev="luc" type="fix" issue="issues/110">
        Added zero checker predicate for some linear algebra algorithms.
      </action>
      <action dev="luc" type="fix" issue="issues/109">
        Fixed exception in OrderedComplexEigenDecomposition when eigenvalues are equal.
      </action>
    </release>
    <release version="1.8" date="2020-12-05" description="This is a maintenance release.
    It fixes a few bugs, mainly a serious one for complex eigendecomposition when
    several eigenvalues are equal. It also add sum and angle differences in SinCos and FieldSinCos.">
      <action dev="luc" type="fix" issue="issues/106">
        Added sum and difference of angles in SinCos and FieldSinCos.
      </action>
      <action dev="luc" type="fix" issue="issues/105">
        Removed spurious reduction of BigFraction in equality test.
      </action>
      <action dev="luc" type="add" issue="issues/104">
        Fixed LU-decomposition issue with signed zero complex numbers on diagonal.
      </action>
      <action dev="luc" type="add" issue="issues/99">
        Fixed complex eigendecomposition when several eigenvalues are equals.
      </action>
    </release>
    <release version="1.7" date="2020-06-23" description="This is a maintenance release.
    It fixes several bugs, including a nasty one in ODE events handling, improves a lot
    the Complex class so it implements the new CalculusFieldElement interface, and adds
    several new differentiation classes to handle simpler cases (univariate derivatives
    at orders 1 and 2 and gradients) with less overhead than the existing DerivativeStructure.">
      <action dev="bryan" type="add" issue="issues/97">
      Added ExtendedUnivariateDifferentiableVectorFunction interface
      for differentiable vectorial function.
      </action>
      <action dev="luc" type="add">
        Added intermediate interface {Field}Derivative.
        The interface is implemented by both {Field}DerivativeStructure, {Field}Gradient,
        {Field}UnivariateDerivative1and {Field}UnivariateDerivative2
      </action>
      <action dev="bryan" type="add" issue="issues/95">
        Added new mathematical methods for FieldGradient,
        FieldUnivariateDerivative1 and FieldUnivariateDerivative2.
      </action>
      <action dev="luc" type="add" issue="issues/92">
        Added isMathematicalInteger to Complex.
      </action>
      <action dev="luc" type="add" >
        Added isMathematicalInteger to Precision for double and float numbers.
      </action>
      <action dev="luc" type="add" issue="issues/93">
        Added UnivariateDerivative1, UnivariateDerivative2 and Gradient
        for computing derivatives in simple cases with less overhead than
        DerivativeStructure.
      </action>
      <action dev="luc" type="add" issue="issues/81">
        Added map and mapToSelf to RealMatrix.
      </action>
      <action dev="luc" type="fix" issue="issues/71">
        Don't ignore exceptions, use try with resources.
      </action>
      <action dev="luc" type="fix" issue="issues/91">
        Fixed accuracy of linear combination for Dfp.
      </action>
      <action dev="luc" type="add" >
        Added Dfp conversion to either larger or smaller number of digits.
      </action>
      <action dev="luc" type="fix" issue="issues/88">
        Fixed handling of special cases in Dfp.atan2(y, x).
      </action>
      <action dev="luc" type="fix" issue="issues/87">
        Prevent overflow of Dfp.hypot.
      </action>
      <action dev="luc" type="fix" issue="issues/86">
        Fixed Dfp.floor and Dfp.ceil for numbers close to zero.
      </action>
      <action dev="luc" type="fix" issue="issues/82">
        Fixed Decimal64.rootN for negative arguments and even roots.
      </action>
      <action dev="luc" type="fix" issue="issues/77">
        Provide both L_1 and L_infinity norms for matrices.
      </action>
      <action dev="luc" type="fix" issue="issues/76">
        Fixed MathArrays.linearCombination when signed zeros are involved.
      </action>
      <action dev="luc" type="fix" issue="issues/74">
        Fixed Complex.pow(Complex p) and Complex.pow(double p) for special cases (real arguments,
        integer power, 0).
      </action>
      <action dev="luc" type="add" >
        Added Complex.pow(int n) with integer power computed more accurately by successive squarings
        rather than complex logarithm and exponential.
      </action>
      <action dev="luc" type="fix" issue="issues/63">
        Added signum to Fraction and BigFraction.
      </action>
      <action dev="luc" type="fix" >
        Prevent random failure of micro-sphere test case.
      </action>
    </release>
    <release version="1.6"  date="2019-11-01" description="This is a maintenance release. It includes only bug fixes.">
      <action dev="luc" type="fix" issue="issues/61">
        Prevent stack overflow error when attempting integration with too large number of points.
      </action>
      <action dev="ward" type="fix" issue="issues/56">
        Show full precision in exception message when root bracketing fails.
      </action>
      <action dev="ward" type="add" issue="issues/56">
        When exception message formatting fails still show a helpful message and stack
        trace.
      </action>
    </release>
    <release version="1.5"  date="2019-05-06" description="This is a maintenance release. The main
    changes since last version are the introduction of field versions of bilinear interpolation,
    univariate interpolators, polynomials and polynomial spline functions.">
      <action dev="luc" type="add" issue="issues/55" >
        Added FieldBivariateFunction and make both BilinearInterpolatingFunction
        and PiecewiseBicubicSplineInterpolatingFunction implement it.
        Github: fixes #55.
      </action>
      <action dev="luc" type="add">
        Added FieldUnivariateInterpolator and make both LinearInterpolator,
        AkimaSplineInterpolator and SplineInterpolator implement it.
      </action>
      <action dev="luc" type="add">
        Added FieldPolynomialFunction and FieldPolynomialSplineFunction.
      </action>
      <action dev="luc" type="add" issue="issues/53" >
        Fixed documentation for interpolation algorithms.
        Github: fixes #53.
      </action>
    </release>
    <release version="1.4"  date="2018-11-17" description="This is a maintenance release. The main
    changes since last version are the introduction of bilinear interpolation for 2D grids, field
    versions of sinCos and a way to build three-dimensional field arrays.">
      <action dev="luc" type="add" issue="issues/48" >
        Added bilinear interpolation for 2D grids.
        Github: fixes #48.
      </action>
      <action dev="luc" type="add" issue="issues/47" >
        Added field version of sinCos.
        Github: fixes #47.
      </action>
      <action dev="luc" type="fix" issue="issues/44" >
        Fixed wrong construction of an Illinois solver that really built a Pegasus solver.
        Github: fixes #44.
      </action>
      <action dev="luc" type="fix" issue="issues/4" >
        Renamed scale parameter to location parameter in the log-normal distribution,
        to avoid confusion.
        Github: fixes #4.
      </action>
      <action dev="luc" type="fix" issue="issues/40" >
        Bisection solvers failed to raise an exception when the search
        interval did not bracket a root.
        Github: fixes #40.
      </action>
      <action dev="luc" type="add" >
        Added a way to build three-dimensional field arrays.
      </action>
    </release>
    <release version="1.3" date="2018-05-08" description="This is a maintenance release. The main
    changes since last version are the introduction of complex eigen decomposition, and introduction
    of a solver for continuous time algebraic Riccati equation.">
      <action dev="luc" type="add" issue="issues/36" >
        Added in FastMath the methods Java 9 added in StrictMath.
        This ensures FastMath is always a drop-in replacement for Math/StrictMath.
        Github: fixes #36.
      </action>
      <action dev="luc" type="fix" issue="issues/35" >
        Added FieldUnivariateVectorFunction and FieldUnivariateMatrixFunction interfaces,
        as well as RealFieldUnivariateVectorFunction and RealFieldUnivariateMatrixFunction 
        Github: fixes #35.
      </action>
      <action dev="luc" type="fix" issue="issues/34" >
        Added FieldUnivariateFunction interface and have polynomials implement it.
        Github: fixes #34.
      </action>
      <action dev="luc" type="add">
        Added new utility methods to create real and field vectors from dimension.
      </action>
      <action dev="luc" type="add">
        Allow FastMath to operate on RealFieldElements.
        This simplifies a lot "fieldification" of algorithms
        previously implemented with primitive double numbers.
      </action>
      <action dev="luc" type="add">
        Added a transposeMultiply method to compute A^T.B
        without creating the intermediate transposed matrix.
      </action>
      <action dev="luc" type="add">
        Added a multiplyTransposed method to compute A.B^T
        without creating the intermediate transposed matrix.
      </action>
      <action dev="luc" type="add" due-to="Evan Ward">
        Added MatrixDecomposer interface that encapsulates algorithms tolerances.
      </action>
      <action dev="luc" type="add" >
        Added a way to compute both sin and cos at once faster than performing two calls.
        This also speeds up DerivativeStructure.sin and DerivativeStructure.cos.
      </action>
      <action dev="luc" type="fix" issue="issues/30" >
        Fixed a problem with eigen decomposition of matrices with large coefficients.
        Github: fixes #30.
      </action>
      <action dev="luc" type="add" issue="issues/29" due-to="Alessandro Romero">
        Added a solver for Continuous time Algebraic Riccati Equation.
      </action>
      <action dev="luc" type="add" due-to="Alessandro Romero">
        Added complex eigen decomposition.
      </action>
    </release>
    <release version="1.2" date="2017-10-25" description="This is a maintenance release.">
      <action dev="luc" type="add" >
        Added new RealFieldElement implementations computing a tuple. This allow to perform the
        same computation on several values at once. The getReal() value correspond to the
        first component of the tuple.
      </action>
      <action dev="luc" type="add" issue="issues/24">
        Added bracketing helper methods in UnivariateSolverUtils for RealFieldUnivariateFunction.
        Github: fixes #24.
      </action>
      <action dev="luc" type="update" issue="issues/22" due-to="Christoph Dibak">
        Improved performance of getRow and setRow for Array2DRowRealMatrix and Array2DRowFieldMatrix.
        Github: fixes #22.
      </action>
    </release>
    <release version="1.1" date="2017-03-16" description="This is a maintenance release.">
      <action dev="psteitz" type="add" issue="issues/19" >
        Added support for sampling from enumerated distributions in RandomDataGenerator.
        GitHub: fixes issue #19.
      </action>
      <action dev="psteitz" type="add" issue="issues/18" >
        Added support for exact integration in PolynomialFunction.
        GitHub: fixes issue #18.
      </action>
      <action dev="luc" type="update">
        Added a factory to simplify building DerivativeStructure instances.
      </action>
      <action dev="luc" type="add">
        Added proper implementations of equals and hashCode to Fields so they
        can be used as keys in maps.
      </action>
      <action dev="luc" type="add">
        Added a derivatives method in Hermite interpolator, similar to the one
        from FieldHermiteInterpolator.
      </action>
      <action dev="luc" type="add">
        Added field-based derivative structures.
      </action>
      <action dev="luc" type="fix" issue="issues/17" due-to="Andrea Antolino">
        Added field-based QR decomposition.
        GitHub: fixes issue #17.
      </action>
      <action dev="ebourg" type="update" issue="issues/12" due-to="Christoph Dibak">
        Performance improvement for Array2DRowRealMatrix.getSubMatrix() (and also
        Array2DRowFieldMatrix.getSubMatrix()).
        GitHub: fixes issue #12.
      </action>
      <action dev="psteitz" type="fix">
        Improved parameter validation for probabilities provided to enumerated distribution
        constructors.
      </action>
      <action dev="psteitz" type="update">
        Added methods to expose the probability mass function to EnumeratedRealDistribution
        and EnumeratedIntegerDistribution.
      </action>
    </release>
    <release version="1.0" date="2016-06-23" description="This is the first release of the library">
      <action dev="psteitz" type="update">
        Renamed TestUtils in core stat.inference to InferenceTestUtils and TestUtils in
        the core unit test package to UnitTestUtils.
      </action>
      <action dev="psteitz" type="update">
        Moved EmpiricalDistribution and MultivariateNormalExpectationMaximization from
        the random package into stat.fitting and dropped ValueServer.
      </action>
      <action dev="psteitz" type="update">
        Moved sampling (random deviate generation) from distribution implementations 
        to RandomDataGenerator in the random package.
      </action>
      <action dev="tn" type="fix">
        Fixed "HypergeometricDistribution#logProbability(int)" which returned NaN
        in case the number of successes equals the population size.
      </action>
      <action dev="tn" type="remove">
        Removed interface "DoubleArray".
      </action>
      <action dev="tn" type="remove">
        Removed interface "NumberTransformer" and classes "TransformerMap" and
        "DefaultTransformer" related to transformation of arbitrary objects
        to double primitives.
      </action>
      <action dev="luc" type="fix" due-to="Andrea Antolino">
        Fix DerivativeStructure.pow for 0 argument and power less than 1.
      </action>
      <action dev="tn" type="fix">
        Fix "FastMath#round(..)" to comply to changed contract of "Math#round()" in Java 8.
      </action>
      <action dev="luc" type="fix">
        Fixed DerivativeStructure.pow(0.0) which was NaN when the DS was 0, despite it should
        always be 1.0 in this case, regardless of the base (even if the base is NaN, in fact).
      </action>
      <action dev="tn" type="add">
        Added Gauss-Laguerre quadrature for integration of improper integrals.
      </action>
      <action dev="tn" type="add">
        Added "AggregatableStatistic" interface for statistics that can
        aggregate results.
      </action>
      <action dev="tn" type="update">
        Added aggregation capabilities to "StreamingStatistics", replacing
        the removed class "AggregatingSummaryStatistics".
      </action>
      <action dev="tn" type="remove">
        Removed "SynchronizedSummaryStatistics", "SynchronizedDescriptiveStatistics"
        and "SynchronizedMultivariateSummaryStatistics". All implementations
        are considered to be not threadsafe. Aggregation of results is preferred
        over synchronization.
      </action>
      <action dev="tn" type="update">
        Renamed "SummaryStatistics" to "StreamingStatistics".
        Additionally, removed support for setting custom statistics
        implementations.
      </action>
      <action dev="tn" type="update">
        Replaced "VectorialMean" with a more generic class "VectorialStorelessStatistic"
        which supports to apply any "StorelessUnivariateStatistic" on vector data.
      </action>
      <action dev="tn" type="remove">
        Removed static "copy(A, B)" methods for storeless statistics.
      </action>
      <action dev="tn" type="update">
        "Median" does not extend from "Percentile" anymore, but uses composition instead.
      </action>
      <action dev="tn" type="update">
        Summary statistics based on external moments (e.g. Mean, Variance)
        are now immutable.
      </action>
      <action dev="tn" type="update">
        Simplified "BinomialConfidenceInterval" and its implementations
        into class "BinomialProportion".
      </action>
      <action dev="tn" type="remove">
        Removed accuracy parameter in constructors of "RealDistribution" implementations
        that calculate the inverse cumulative probability analytically.
      </action>
      <action dev="tn" type="update">
        Refactored distribution implementations into separate sub-packages:
        "discrete", "continuous" and "multivariate".
      </action>
      <action dev="tn" type="remove">
        Removed "copyOf" and "copyOfRange" methods in "MathArrays". "Object#clone()"
        and "Arrays#copyOfRange(...)" should be used instead.
      </action>
      <action dev="tn" type="update">
        Simplified "PivotingStrategyInterface" and implementations into single
        enum class "PivotingStrategy".
      </action>
      <action dev="tn" type="update">
        "RealVector#Entry" is now public.
      </action>
      <action dev="tn" type="update">
        "RealLinearOperator" is now an interface.
      </action>
      <action dev="tn" type="update">
        "Frequency" class now uses generics. For similar functionality as previous
        class wrt integer numbers, use "LongFrequency" which supports adding
        different integer number types (e.g. int, long, short) to the same
        "LongFrequency" instance. 
      </action>
      <action dev="luc" type="update">
        Simplified exception hierarchy.
      </action>
      <action dev="tn" type="update">
        Modularized the library.
      </action>
      <action dev="psteitz" type="update">
        Forked from the Apache Commons Math library.
      </action>
    </release>
  </body>
</document>
